// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoBack.Data;

#nullable disable

namespace TodoBack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250807020433_SeedSubtaskStates")]
    partial class SeedSubtaskStates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("TodoBack.Models.Subtask", b =>
                {
                    b.Property<int>("SubtaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubtaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubtaskStateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubtaskId");

                    b.HasIndex("SubtaskStateId");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Subtasks");
                });

            modelBuilder.Entity("TodoBack.Models.SubtaskState", b =>
                {
                    b.Property<int>("SubtaskStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SubtaskStateId");

                    b.ToTable("SubtaskStates");
                });

            modelBuilder.Entity("TodoBack.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TodoBack.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TaskCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TaskCreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TaskDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskItemId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TodoBack.Models.TaskTag", b =>
                {
                    b.Property<int>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskItemId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TaskTags");
                });

            modelBuilder.Entity("TodoBack.Models.Subtask", b =>
                {
                    b.HasOne("TodoBack.Models.SubtaskState", "SubtaskState")
                        .WithMany()
                        .HasForeignKey("SubtaskStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoBack.Models.TaskItem", "TaskItem")
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubtaskState");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("TodoBack.Models.TaskTag", b =>
                {
                    b.HasOne("TodoBack.Models.Tag", "Tag")
                        .WithMany("TaskTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoBack.Models.TaskItem", "TaskItem")
                        .WithMany("TaskTags")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("TodoBack.Models.Tag", b =>
                {
                    b.Navigation("TaskTags");
                });

            modelBuilder.Entity("TodoBack.Models.TaskItem", b =>
                {
                    b.Navigation("Subtasks");

                    b.Navigation("TaskTags");
                });
#pragma warning restore 612, 618
        }
    }
}
